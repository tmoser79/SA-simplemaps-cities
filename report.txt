


****** [MISSING `default/app.conf`] ******
[MISSING `default/app.conf`]
Author                [MISSING `default/app.conf`]
                      advanced_xml, alert_actions_conf, antivirus, appapproval,
                      ast, bias, cloud, csv, custom_search_commands,
                      custom_search_commands_v2, custom_visualizations,
                      custom_workflow_actions, deprecated_feature,
                      developer_guidance, django_bindings, future, inputs_conf,
                      itsi, java, jquery, manual, markdown, migration_victoria,
                      modular_inputs, offensive, packaging_standards,
Tags                  privaite_app, private_app, private_classic,
                      private_cloud, private_victoria, public_distributed,
                      public_single, pura, python3_version, python_version,
                      removed_feature, restmap_config, savedsearches, security,
                      self-service, spec, splunk_5_0, splunk_6_0, splunk_6_1,
                      splunk_6_2, splunk_6_3, splunk_6_4, splunk_6_5,
                      splunk_6_6, splunk_7_0, splunk_7_1, splunk_7_2,
                      splunk_7_3, splunk_8_0, splunk_9_0, splunk_appinspect,
                      telemetry, web_conf, windows
Version               [MISSING `default/app.conf`]
Hash                  d41d8cd98f00b204e9800998ecf8427e
AppInspect Request ID cf233351-3cb1-4ced-8b10-980bc42bcde9
Run Time              2024-02-12T13:09:06.556305
Execution Time        9
Run Parameters:
Field              Value
AppInspect Version 3.2.0
Analyzers:
Name           Version Is Latest
static-checks  3.2.0   True
dynamic-checks 1.29.0  True
retire-js      1.0.2   True
Totals:
Status         Count
Failures       1
Warnings       0
Errors         0
Not Applicable 2
Manual Checks  0
Skipped        334
Successes      9
*** [ Failure Summary ] ***
** Failures will block the Cloud Vetting. They must be fixed. **
** check_that_extracted_splunk_app_contains_default_app_conf_file **
    * Splunk App packages should contain a `default/app.conf file`. No
      `default/app.conf` was found in `cf233351-3cb1-4ced-8b10-980bc42bcde9-
      app`.
*** [ Full Report ] ***
** check_public_compatibilites **
* [ skipped ] check_distributed_installation_method - This check is used as a
flag to indicate what installation method should be used when installing this
app on the Splunk Cloud Platform - Classic Experience. SUCCESS indicates "app
management phase" installation, WARNING indicates "assisted" installation, and
FAILURE indicates that the app is "rejected" for installation on Splunk Cloud
Classic Experience. *
    * Skipping due to package validation issues.
* [ skipped ] check_single_cloud_installation_method - This check is used as a
flag to indicate what installation method should be used when installing this
app on the Splunk Cloud Platform - Victoria Experience. SUCCESS indicates
"simple" installation, WARNING indicates "assisted" installation, and FAILURE
indicates that the app is "rejected" for installation on Splunk Cloud Victoria
Experience. *
    * Skipping due to package validation issues.
** Splunk Packaging Toolkit (SLIM) validation This group uses slim to extend
the cloud checks for improved auto-vetting. **
* [ skipped ] check_custom_confs - Find non-standard config files and notify
app developers to confirm that 1. those files are safe to install. 2. those
files are partitioned to the expected instances. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_modular_inputs - Check that inputs.conf.spec does not
include modular inputs that perform management tasks. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_nested_apps - Check that nested apps do not exist as
they are not valid for self-service install. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_nested_archives - Check that nested archives do not
exist as they are not valid for self-service install. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_scripted_inputs - Check that inputs.conf does not
include scripted inputs that perform management tasks. *
    * Skipping due to package validation issues.
* [ skipped ] check_that_app_passes_slim_validation_for_appinspect - Check that
apps with app.manifest are valid or apps without an app.manifest can generate
one. *
    * Skipping due to package validation issues.
* [ skipped ] check_that_app_passes_slim_validation_for_cloud - Check that apps
can be validated by SLIM or reject, since invalid apps can't be installed in
Classic Splunk Cloud. *
    * Skipping due to package validation issues.
* [ skipped ] check_that_splunk_app_package_type_is_not_zip_type - Check that
the provided app package is not .zip type for SSAI purpose *
    * Skipping due to package validation issues.
** Checks related to JavaScript usage. **
* [ success ] check_for_vulnerable_javascript_library_usage - Detect usage of
JavaScript libraries with known vulnerabilities. *
** Malware, viruses, malicious content, user security standards (dynamic
checks) **
* [ skipped ] check_for_viruses - Check that the app does not include viruses.
*
    * Skipping due to package validation issues.
** Splunk app packaging standards These checks validate that a Splunk app has
been correctly packaged, and can be provided safely for package validation. **
* [ failure ] check_that_extracted_splunk_app_contains_default_app_conf_file -
Check that the extracted Splunk App contains a default/app.conf file. *
    * Splunk App packages should contain a `default/app.conf file`. No
      `default/app.conf` was found in `cf233351-3cb1-4ced-8b10-980bc42bcde9-
      app`.
* [ success ]
check_that_extracted_splunk_app_does_not_contain_files_with_invalid_permissions
- Check that the extracted Splunk App does not contain any files with incorrect
permissions. Files must have the owner's permissions include read and write
(600). *
* [ success ]
check_that_extracted_splunk_app_does_not_contain_invalid_directories - Check
that the extracted Splunk App does not contain any directories with incorrect
permissions. Directories and subdirectories must have the owner's permissions
set to r/w/x (700). *
* [ success ]
check_that_extracted_splunk_app_does_not_contain_prohibited_directories_or_files
- Check that the extracted Splunk App does not contain any directories or files
that start with a ., or directories that start with __MACOSX. *
* [ success ]
check_that_splunk_app_package_does_not_contain_files_outside_of_app - Check
that the Splunk App package does not contain any non-app files. Files within a
valid app folder or valid dependencies within a .dependencies folder are
permitted, all other files are not. *
* [ success ] check_that_splunk_app_package_extracts_to_visible_directory -
Check that the compressed artifact extracts to a directory that does not start
with a . character. *
* [ success ] check_that_splunk_app_package_has_read_permission - Check that
the Splunk app provided does not contain incorrect permissions. Packages must
have the owner's read permission set to r (400). *
* [ not_applicable ]
check_that_splunk_app_package_has_valid_static_dependencies - Check that the
Splunk App package contains only valid dependencies. Dependencies are valid if
a .dependencies directory contains only valid app packages inside. *
    * No ../.dependencies folder found. Please check that the Splunk App
      package contains only valid dependencies.
* [ success ] check_that_splunk_app_package_name_does_not_start_with_period -
Check that the Splunk app provided does not start with a . character. *
* [ success ] check_that_splunk_app_package_valid_compressed_file - Check that
the Splunk app provided a valid compressed file. *
* [ not_applicable ]
check_that_splunk_app_package_with_static_dependencies_has_exactly_one_app_folder
- Check that the Splunk App package with a .dependencies directory also
contains exactly one valid app folder. *
    * No ../.dependencies folder found. Please add a .dependencies directory
      with an valid app folder.
* [ skipped ] check_valid_version_number - Check that the extracted Splunk App
contains a default/app.conf file that contains an [id] or [launcher] stanza
with a version property that is formatted as Major.Minor.Revision. *
    * Skipping due to package validation issues.
* [ skipped ] check_requires_adobe_flash - Check that the app does not use
Adobe Flash files. *
    * Skipping due to package validation issues.
* [ skipped ]
check_that_extracted_splunk_app_does_not_contains_only_app_conf_file - Check
that the extracted Splunk App does not contain only app.conf *
    * Skipping due to package validation issues.
* [ skipped ]
check_that_splunk_app_package_with_static_dependencies_has_app_manifest - Check
that the Splunk App package with a .dependencies directory also contains an app
folder with an app.manifest. *
    * Skipping due to package validation issues.
** Authentication.conf file standards Ensure that bindDNpassword is not
specified. For more, see authentication.conf. **
* [ skipped ] check_role_map_should_not_map_splunk_system_role - Check that all
map roles defined in authentication.conf do not map to splunk-system-role. *
    * Skipping due to package validation issues.
* [ skipped ] check_saml_auth_should_not_turn_off_signed_assertion - Check that
saml-* stanzas in authentication.conf do not turn off signedAssertion property.
*
    * Skipping due to package validation issues.
* [ skipped ] check_scripted_authentication_has_valid_python_version_property -
Check that all the scripted authentications defined in authentication.conf are
explicitly set the python.version to python3. *
    * Skipping due to package validation issues.
* [ skipped ] check_authentication_conf_does_not_have_binddnpassword_property -
Check that stanzas in authentication.conf do not use the the bindDNpassword
property. *
    * Skipping due to package validation issues.
** Authorize.conf file standards Ensure that the authorize configuration file
located in the /default folder is well formed and valid. For more, see
authorize.conf. **
* [ skipped ] check_authorize_conf_capability_not_modified - Check that
authorize.conf does not contain any modified capabilities. *
    * Skipping due to package validation issues.
** Binary file standards **
* [ skipped ] check_idx_binary_compatibility - Checks that binaries that are
distributed to the IDX tier of a distributed Splunk platform deployment are
compatible with aarch64. *
    * Skipping due to package validation issues.
** Cloud operations simple application check This group serves to help validate
simple applications in an effort to try and automate the validation process for
cloud operations. **
* [ skipped ] check_alert_actions_conf_for_alert_execute_cmd_properties - Check
that commands referenced in the alert.execute.cmd property of all alert actions
are checked for compliance with Splunk Cloud security policy. Prevent
alert_actions.conf from being used to execute malicious commands. *
    * Skipping due to package validation issues.
* [ skipped ] check_authorize_conf_admin_all_objects_privileges - Check that
authorize.conf does not grant excessive administrative permissions to the user.
Prevent roles from gaining unauthorized permissions. *
    * Skipping due to package validation issues.
* [ skipped ] check_default_data_ui_file_allow_list - Check that directories
under data/ui contain only allowed files. Ensure unnecessary, unwanted files
are not bundled in the app inappropriately. *
    * Skipping due to package validation issues.
* [ skipped ] check_default_data_ui_manager_for_plain_text_credentials - Check
that directories under data/ui contain only allowed files. Identify for manual
review items that might cause passwords to be stored in plaintext. *
    * Skipping due to package validation issues.
* [ skipped ] check_distsearch_conf_for_concerning_replicated_file_size - Check
if concerningReplicatedFileSize in distsearch.conf is larger than 50 MB. *
    * Skipping due to package validation issues.
* [ skipped ] check_indexes_conf_only_uses_splunk_db_variable - Check that
indexes defined in indexes.conf use relative paths starting with $SPLUNK_DB *
    * Skipping due to package validation issues.
* [ skipped ] check_inputs_conf_batch_has_required_attributes - Check that
batch input has required attributes. The following key/value pairs are required
for batch inputs: move_policy = sinkhole *
    * Skipping due to package validation issues.
* [ skipped ] check_inputs_conf_for_batch - Check that batch input accesses
files in a permitted way. To be permissible, the batch input must meet the
following criteria: 1) The file path needs to match a file in the directory
"$SPLUNK_HOME/var/spool/splunk/" 2) The file name needs to be application
specific "$SPLUNK_HOME/etc/apps/" 3) The file name should not end with "stash"
or "stash_new" *
    * Skipping due to package validation issues.
* [ skipped ] check_lookups_allow_list - Check that lookups/ contains only
approved file types (.csv, .csv.default, .csv.gz, .csv.tgz, .kmz) or files
formatted as valid csv. Ensure malicious files are not passed off as lookup
files. *
    * Skipping due to package validation issues.
* [ skipped ] check_metadata_allow_list - Check that the metadata/ and users/
<username>/metadata directories do not contain any subdirectories and only
contain .meta files. Ensure malicious files are not passed off as metadata
files. *
    * Skipping due to package validation issues.
* [ skipped ] check_scripted_inputs_python_version - Check that python version
is python3 for scripted inputs defined in inputs.conf. *
    * Skipping due to package validation issues.
* [ skipped ] check_setup_xml - Check that setup.xml does not exist in the app
default or local folders. *
    * Skipping due to package validation issues.
* [ skipped ] check_stanza_of_authentication_conf - Check that only role-
mapping stanza is allowed in authenticaiton.conf as long as it doesn't map
users to a cloud-internal role. *
    * Skipping due to package validation issues.
* [ skipped ] check_static_directory_file_allow_list - Check that the static/
directory does not contains any subdirectories and contains only known file
types. Ensure malicious files are not passed off as metadata files. *
    * Skipping due to package validation issues.
* [ skipped ] check_audit_conf_deny_list - Check that the app does not create
audit. *
    * Skipping due to package validation issues.
* [ skipped ] check_authorize_conf_for_tokens_auth - Check that authorize.conf
does not contain a [tokens_auth] stanza *
    * Skipping due to package validation issues.
* [ skipped ] check_bookmarks_conf_deny_list - Check that the app does not
create bookmarks. *
    * Skipping due to package validation issues.
* [ skipped ] check_command_scripts_exist_for_cloud - Check that custom search
commands have an executable or script per stanza. *
    * Skipping due to package validation issues.
* [ skipped ] check_datatypesbnf_conf_deny_list - Check that the app does not
create datatypesbnf. *
    * Skipping due to package validation issues.
* [ skipped ] check_default_mode_conf_deny_list - Check that the app does not
create default-mode. *
    * Skipping due to package validation issues.
* [ skipped ] check_deploymentclient_conf_deny_list - Check that the app does
not create deploymentclient. *
    * Skipping due to package validation issues.
* [ skipped ] check_deployment_conf_deny_list - Check that the app does not
create deployment. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_auto_update_features - Check that the app does not
implement auto-update features. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_binary_files_without_source_code - Check that all
executable binary files have matching source code. For any binary files, there
should be a source code provided with the same name. Or, there should be a
decalaration of what the binary file is all about in the app's REAMDE. Details
for passing this check will be returned if you fail it. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_index_volume_usage - Check that indexes.conf does not
declare volumes. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_inputs_fifo_usage - Check that default/inputs.conf or
local/inputs.conf or users/<username>/local/inputs.conf does not contain any
fifo:// stanzas. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_java - Check whether the app contains java files. Java
files will be inspected for compliance with Splunk Cloud security policy. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_known_vulnerabilities_in_third_party_libraries - Check
third party libraries for known vulnerabilities. Splunk Cloud Application
Security policy defines "Included application libraries have multiple
vulnerabilities not covered by the components in Transit" as a moderate
security risk and may or may not be permitted based on cumulative risk score. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_perl - Check if the app contains Perl scripts. Perl
scripts will be inspected for compliance with Splunk Cloud security policy. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_reverse_shells - Check that the app does not contain
reverse shells. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_shell - Check whether the app contains shell files.
Shell files will be manually inspected for compliance with Splunk Cloud
security policy. *
    * Skipping due to package validation issues.
* [ skipped ] check_health_conf_deny_list - Check that the app does not create
health. *
    * Skipping due to package validation issues.
* [ skipped ] check_inputs_conf_for_fschange - Check that default/inputs.conf
or local/inputs.conf or users/<username>/local/inputs.conf does not contain any
fschange:// stanzas. *
    * Skipping due to package validation issues.
* [ skipped ] check_inputs_conf_for_http_global_usage - Check that inputs.conf
does not contain a [http] stanza *
    * Skipping due to package validation issues.
* [ skipped ] check_inputs_conf_for_http_inputs - Apps cannot ship a configured
HEC token in inputs.conf. HEC tokens must be created by stack admins via ACS.
Refer: https://docs.splunk.com/Documentation/Splunk/9.1.0/Data/
UsetheHTTPEventCollectorRemove [http://] stanza from inputs.conf. *
    * Skipping due to package validation issues.
* [ skipped ] check_inputs_conf_for_remote_queue_monitor - Check that
inputs.conf does not have any remote_queue inputs. *
    * Skipping due to package validation issues.
* [ skipped ] check_inputs_conf_for_splunk_tcp - Check that default/inputs.conf
or local/inputs.conf or users/<username>/local/inputs.conf does not contain any
splunktcp:// stanzas. *
    * Skipping due to package validation issues.
* [ skipped ] check_inputs_conf_for_splunktcptoken - Check that inputs.conf
does not contain a splunktcptoken stanza. *
    * Skipping due to package validation issues.
* [ skipped ] check_inputs_conf_for_ssl - Check that inputs.conf does not have
any SSL inputs. *
    * Skipping due to package validation issues.
* [ skipped ] check_inputs_conf_for_tcp - Check that default/inputs.conf or
local/inputs.conf or users/<username>/local/inputs.conf does not contain any
tcp:// stanzas. *
    * Skipping due to package validation issues.
* [ skipped ] check_inputs_conf_for_udp - Check that inputs.conf does not have
any UDP inputs. *
    * Skipping due to package validation issues.
* [ skipped ] check_instance_cfg_conf_deny_list - Check that the app does not
create instance.cfg. *
    * Skipping due to package validation issues.
* [ skipped ] check_introspection_of_cloud_filesystem - Check that the app does
not create crawl. *
    * Skipping due to package validation issues.
* [ skipped ] check_java_sdk_version - Check that Splunk SDK for Java is up-to-
date. *
    * Skipping due to package validation issues.
* [ skipped ] check_literals_conf_deny_list - Check that the app does not
create literals. *
    * Skipping due to package validation issues.
* [ skipped ] check_messages_conf_deny_list - Check that the app does not
create messages. *
    * Skipping due to package validation issues.
* [ skipped ] check_modular_inputs_scripts_exist_for_cloud - Check that there
is a script file in bin/ for each modular input defined in README/
inputs.conf.spec. *
    * Skipping due to package validation issues.
* [ skipped ] check_passwords_conf_deny_list - Check that the app does not
create passwords. *
    * Skipping due to package validation issues.
* [ skipped ] check_pubsub_conf_deny_list - Check that the app does not create
pubsub. *
    * Skipping due to package validation issues.
* [ skipped ] check_scripted_inputs_cmd_path_pattern - Check the cmd path
pattern of scripted input defined in inputs.conf. *
    * Skipping due to package validation issues.
* [ skipped ] check_segmenters_conf_deny_list - Check that app does not contain
segmenters.conf with Splunk-defined stanza. *
    * Skipping due to package validation issues.
* [ skipped ] check_serverclass_conf_deny_list - Check that the app does not
create serverclass. *
    * Skipping due to package validation issues.
* [ skipped ] check_serverclass_seed_xml_conf_deny_list - Check that the app
does not create serverclass.seed.xml. *
    * Skipping due to package validation issues.
* [ skipped ] check_source_classifier_conf_deny_list - Check that the app does
not create source-classifier. *
    * Skipping due to package validation issues.
* [ skipped ] check_sourcetypes_conf_deny_list - Check that the app does not
create sourcetypes. *
    * Skipping due to package validation issues.
* [ skipped ] check_splunk_launch_conf_deny_list - Check that the app does not
create splunk-launch. *
    * Skipping due to package validation issues.
* [ skipped ] check_telemetry_conf_deny_list - Check that the app does not
create telemetry. *
    * Skipping due to package validation issues.
* [ skipped ] check_that_app_contains_any_windows_specific_components - Check
that the app contains MS Windows specific components, which will not function
correctly in Splunk Cloud whose OS should be Linux x64. *
    * Skipping due to package validation issues.
* [ skipped ] check_that_no_configurations_of_default_source_type_in_props_conf
- Check that the app does not contain configurations of default source type in
props.conf, which will overwrite the configurations in system/default/
props.conf and may affect other apps. *
    * Skipping due to package validation issues.
* [ skipped ] check_transforms_conf_for_external_cmd - Check that
transforms.conf does not contain any transforms with malicious command scripts
specified by external_cmd=<string> attribute. *
    * Skipping due to package validation issues.
* [ skipped ] check_transforms_conf_for_external_cmd_cloud - Check that
transforms.conf does not contain any transforms with non-python malicious
command scripts specified by external_cmd=<string> attribute. *
    * Skipping due to package validation issues.
* [ skipped ] check_user_seed_conf_deny_list - Check that the app does not
create user-seed. *
    * Skipping due to package validation issues.
* [ skipped ] check_wmi_conf_deny_list - Check that the app does not create
wmi. *
    * Skipping due to package validation issues.
* [ skipped ] check_workload_pools_conf_deny_list - Check that the app does not
create workload_pools. *
    * Skipping due to package validation issues.
* [ skipped ] check_workload_rules_conf_deny_list - Check that the app does not
create workload_rules. *
    * Skipping due to package validation issues.
** Custom visualizations support checks Custom visualizations are defined in /
default/visualizations.conf file. For more, see Custom visualization API
reference. **
* [ skipped ] check_for_default_values_for_modviz - check the property defined
in spec file of README/savedsearches.conf.spec if the property is defined in
spec file and does not provide a default value in default/savedsearches.conf,
this check should fail. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_formatter_html_bad_nodes - Check appserver/static/
visualizations/<viz_name>/formatter.html for bad nodes that are removed by
Splunk's .../search_mrsparkle/exposed/js/util/htmlcleaner.js when rendered. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_formatter_html_comments - Check appserver/static/
visualizations/<viz_name>/formatter.html for comments that are removed by
Splunk's .../search_mrsparkle/exposed/js/util/htmlcleaner.js when rendered. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_formatter_html_css_expressions - Check appserver/
static/visualizations/<viz_name>/formatter.html for css expressions from all
<style> tags that are replaced by Splunk's .../search_mrsparkle/exposed/js/
util/htmlcleaner.js when rendered. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_formatter_html_inappropriate_attributes - Check
appserver/static/visualizations/<viz_name>/formatter.html for inappropriate
attributes that are removed by Splunk's .../search_mrsparkle/exposed/js/util/
htmlcleaner.js when rendered. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_formatter_html_inline_style_attributes - Check
appserver/static/visualizations/<viz_name>/formatter.html for inline style
attributes from all <style> tags that are removed by Splunk's .../
search_mrsparkle/exposed/js/util/htmlcleaner.js when rendered. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_matching_stanza_visualization_directory - Check that
each custom visualization stanza in default/visualizations.conf has a matching
directory in the appserver/static/visualizations/ directory. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_required_files_for_visualization - Check that each
custom visualization stanza in default/visualizations.conf has some required
source files in the appserver/static/visualizations/<visualization_name>/
directory. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_visualizations_directory - Check that custom
visualizations have an appserver/static/visualizations/ directory. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_visualizations_preview_png - Check the required file
appserver/static/visualizations/<viz_name>/preview.png exists for the
visualization *
    * Skipping due to package validation issues.
* [ skipped ] check_that_visualizations_conf_has_matching_default_meta_stanza -
Check that each stanza in default/vizualizations.conf has a matching stanza in
metadata/default.meta. *
    * Skipping due to package validation issues.
** Victoria-specific config replication checks This group includes checks for
configs which may not be replicated to indexers as expected in Splunk Cloud
Victoria. **
* [ skipped ] check_for_indexer_synced_configs - Check that the app does not
contain configs which might be intended for indexers, but won't be synced there
on Victoria. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_indexer_synced_datetime_xml - Check that the specified
location of datetime.xml is not from the local folder. *
    * Skipping due to package validation issues.
** Checking for Front-end Libraries This check looks for various front-end
libraries inside of apps. As of 03/23/2022, we are looking at Splunk UI and
it's predecessor, SplunkJS. This is currently an INFORMATIONAL Check. Updated
on 04/17/2023 This check now is expanded to look for several other critical
front-end libraries. 1. We have expanded the regex matching to be more inline
with all of the UDF Packages https://splunkui.splunk.com/Packages/dashboard-
docs/?path=%2FFAQ 2. We have added a few other critical packages (@splunk/
react-search, @splunk/react-time-range, @splunk/search-job, @splunk/ui-utils,
@splunk/splunk-utils, @splunk/moment) 3. We have expanded the regex matching to
be more inline with more of the Visualizations packages. **
* [ skipped ] check_for_splunk_dashboard_core - Check that @splunk/dashboard-
core is being used. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_splunk_frontend_utility_components - Check for usage of
utility components. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_splunk_js - Check that SplunkJS is being used. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_splunk_sui - Check that SUI is being used. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_splunk_visualizations - Check that @splunk/
visualizations is being used. *
    * Skipping due to package validation issues.
** Check for git conflict releated issue **
* [ skipped ] check_for_git_merge_conflict_in_app - Check no git merge conflict
is present *
    * Skipping due to package validation issues.
** ITSI module verification **
* [ skipped ] check_for_itsi_modules - Check that the app does not contain an
ITSI module. *
    * Skipping due to package validation issues.
** JavaScript file standards **
* [ skipped ] check_for_console_log_injection_in_javascript - Check if any
sensitive data leakage in console log *
    * Skipping due to package validation issues.
* [ skipped ] check_for_iframe_in_javascript - Check if the app contains
possible iframe in JavaScript files, templates or html pages. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_insecure_http_request_in_javascript - Check if the app
contain possible insecure http request in JavaScript files. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_reflected_xss_in_javascript - Check if possible
reflected xss in JavaScript *
    * Skipping due to package validation issues.
* [ skipped ] check_for_remote_code_execution_in_javascript - Check if the app
contain possible remote code execution in JavaScript files. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_stored_xss_in_javascript - Check if possible stored xss
in JavaScript *
    * Skipping due to package validation issues.
* [ skipped ] check_for_telemetry_metrics_in_javascript - Check for usages of
telemetry metrics in JavaScript *
    * Skipping due to package validation issues.
* [ skipped ] check_for_udp_communication_in_javascript - Check if the app
contains udp communication in JavaScript files. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_weak_encryption_and_hashing_in_javascript - Check if
any weak encryption in JavaScript *
    * Skipping due to package validation issues.
* [ skipped ] check_telemetry_endpoint_usage_in_javascript - Check that app
does not use REST endpoint to collect and send telemetry data. *
    * Skipping due to package validation issues.
** jQuery vulnerabilities **
* [ skipped ] check_hotlinking_splunk_web_libraries - Check that the app files
are not importing files directly from the search head. *
    * Skipping due to package validation issues.
* [ skipped ] check_html_dashboards - Check for HTML dashboards, which are
deprecated. *
    * Skipping due to package validation issues.
* [ skipped ] check_simplexml_standards_version - Check that the dashboards in
your app have a valid version attribute. *
    * Skipping due to package validation issues.
** Limits.conf file standards Ensure that /default/limits.conf or local/
limits.conf file is omitted. When included in the app, the limits.conf file
changes the limits that are placed on the system for hardware use and memory
consumption, which is a task that should be handled by Splunk administrators
and not by Splunk app developers. For more, see limits.conf. **
* [ skipped ] check_limits_conf - Check that default/limits.conf or local/
limits.conf or users/<username>/local/limits/conf has not been included. *
    * Skipping due to package validation issues.
** Outputs.conf file standards Ensure that the outputs.conf file located in the
/default folder of the app is well formed and valid. For more, see
outputs.conf. **
* [ skipped ] check_if_outputs_conf_exists - Check that forwarding enabled in
'outputs.conf' is failed in cloud *
    * Skipping due to package validation issues.
** README/*.spec file standards Ensure that the .spec files located in the /
README folder of the app is well formed and valid. **
* [ skipped ] check_no_default_or_value_before_stanzas - Check that no
[default] or other values are defined before the first stanza. *
    * Skipping due to package validation issues.
** Deprecated features from Splunk Enterprise 5.0 The following features should
not be supported in Splunk 5.0 or later. **
* [ skipped ] check_deprecated_eventtype_autodiscovering - Check for use of
findtypes SPL command in .conf files and SimpleXML. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_savedsearches_used_in_eventtypes_conf - Check that
saved searches are not used within event types. https://docs.splunk.com/
Documentation/Splunk/5.0/ReleaseNotes/Deprecatedfeatures https://
docs.splunk.com/Documentation/Splunk/7.2.5/Knowledge/Abouteventtypes *
    * Skipping due to package validation issues.
** Deprecated features from Splunk Enterprise 6.0 The following features should
not be supported in Splunk 6.0 or later. **
* [ skipped ] check_crawl_conf_deny_list - Check that app does not contain
crawl.conf as it was deprecated & removed in Splunk. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_viewstates_conf - Check that viewstates.conf does not
exist at local/viewstates.conf, default/viewstates.conf or users/<username>/
local/viewstates.conf in the app. (http://docs.splunk.com/Documentation/Splunk/
6.0/AdvancedDev/Migration#Viewstates_are_no_longer_supported_in_simple_XML) *
    * Skipping due to package validation issues.
** Deprecated features from Splunk Enterprise 6.1 The following features should
not be supported in Splunk 6.1 or later. **
* [ skipped ] check_for_datamodel_acceleration_endpoint_usage - Check that
deprecated datamodel/acceleration is not used. https://docs.splunk.com/
Documentation/Splunk/6.2.0/RESTREF/RESTknowledge *
    * Skipping due to package validation issues.
** Deprecated features from Splunk Enterprise 6.2 The following features should
not be supported in Splunk 6.2 or later. https://docs.splunk.com/Documentation/
Splunk/6.2.0/ReleaseNotes/Deprecatedfeatures **
* [ skipped ] check_for_dashboard_xml_list_element - Check Dashboard XML files
for <list> element. <list>was deprecated in Splunk 6.2 and removed in Splunk
6.5. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_earliest_time_and_latest_time_elements_in_dashboard_xml
- Check for the deprecated <earliestTime> and <latestTime> elements in
dashboard XML files.As of version 6.2 these elements are replaced by <earliest>
and <latest> elements. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_populating_search_element_in_dashboard_xml - Check for
the deprecated <populatingSearch> and <populatingSavedSearch> elements in
dashboard XML files.Use the <search> element instead. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_simple_xml_row_grouping - Check for the deprecated
grouping attribute of row node in Simple XML files.Use the <panel> node
instead. *
    * Skipping due to package validation issues.
** Deprecated features from Splunk Enterprise 6.3 These following features
should not be supported in Splunk 6.3 or later. For more, see Deprecated
features and Changes for Splunk App developers. **
* [ skipped ] check_for_run_script_alert_action - Check for use of running a
script in alert action *
    * Skipping due to package validation issues.
* [ skipped ] check_for_django_bindings - Check for use of Django bindings. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_simple_xml_chart_element_with_deprecated_option_names -
Check for Simple XML <chart> panels with deprecated options
charting.axisLabelsY.majorTickSize or
charting.axisLabelsY.majorLabelVisibility. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_simple_xml_option_element_with_name_previewresults -
Check for the deprecated <option name='previewResults'> in Simple XML files. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_simple_xml_search_related_element - Check for the
deprecated <searchTemplate>, <searchString>, <searchName>, and
<searchPostProcess> element in Simple XML files. Use the <search> element
instead. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_simple_xml_seed_element - Check for the deprecated
<seed> option in Simple XML forms. Use the <initialValue> element instead. *
    * Skipping due to package validation issues.
** Deprecated features from Splunk Enterprise 6.4 The following features should
not be supported in Splunk 6.4 or later. For more, see Deprecated features and
Changes for Splunk App developers. **
* [ skipped ] check_for_noninteger_height_option - Check that <option
name="height"> uses an integer for the value.Do not use <option name="height">
[value]px</option>. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_simple_xml_single_element_with_deprecated_option_names
- Check Simple XML files for <single> panels with deprecated
options'additionalClass', 'afterLabel', 'beforeLabel', 'classField',
'linkFields','linkSearch', 'linkView' *
    * Skipping due to package validation issues.
* [ skipped ] check_web_conf_for_simple_xml_force_flash_charting - Check that
web.conf does not use the simple_xml_force_flash_chartingproperty. *
    * Skipping due to package validation issues.
* [ skipped ] check_web_conf_for_simple_xml_module_render - Check that web.conf
does not use the simple_xml_module_renderproperty. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_splunk_js_d3chartview - Checks that views are not
importing d3chartview. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_splunk_js_googlemapsview - Checks that views are not
importing googlemapsview. *
    * Skipping due to package validation issues.
** Deprecated features from Splunk Enterprise 6.5 The following features should
not be supported in Splunk 6.5 or later. For more, see Deprecated features and
Changes for Splunk App developers. **
* [ skipped ]
check_for_dashboard_xml_option_element_with_deprecated_attribute_value - Check
Dashboard XML files for <option> element with the deprecated option value
"refresh.auto.interval" i.e. <option name="refresh.auto.interval"> *
    * Skipping due to package validation issues.
* [ skipped ] check_for_splunk_js_header_and_footer_view - Checks that views
are not importing splunkjs/mvc/headerview or splunkjs/mvc/footerrview. These
are replaced by LayoutView in Splunk 6.5. LayoutView is not backwards
compatible to Splunk 6.4 or earlier. Only use LayoutView if you are only
targeting Splunk 6.5 or above. *
    * Skipping due to package validation issues.
** Deprecated or removed features from Splunk Enterprise 6.6 The following
features should not be supported in Splunk 6.6 or later. For more, see
Deprecated features and Changes for Splunk App developers. **
* [ skipped ] check_for_autolb_setting_in_outputs_conf - Check removed support
for setting autoLB in outputs.conf *
    * Skipping due to package validation issues.
* [ skipped ] check_for_app_install_endpoint - Check apps/appinstall usages *
    * Skipping due to package validation issues.
* [ skipped ] check_for_displayrownumbers_in_simple_xml - Check existence for
displayRowNumbers option in simple xml. This option is no longer supported
since Splunk 6.6. *
    * Skipping due to package validation issues.
** Deprecated features from Splunk Enterprise 7.1 The following features should
not be supported in Splunk 7.1 or later. For more, see Deprecated features and
Changes for Splunk App developers. **
* [ skipped ] check_for_input_command_usage - Check for use of input SPL
command in .conf files and SimpleXML. *
    * Skipping due to package validation issues.
** Deprecated features from Splunk Enterprise 7.2 The following features should
not be supported in Splunk 7.2 or later. For more, see Deprecated features and
Changes for Splunk App developers. **
* [ skipped ] check_for_deprecated_literals_conf - Check deprecated
literals.conf existence. *
    * Skipping due to package validation issues.
** Deprecated features from Splunk Enterprise 7.3 The following features should
not be supported in Splunk 7.3 or later. For more, see Deprecated features and
Changes for Splunk App developers. **
* [ skipped ] check_for_tscollect_command_usage - Check for use of tscollect
SPL command in .conf files and SimpleXML. *
    * Skipping due to package validation issues.
** Deprecated features from Splunk Enterprise 8.0 The following features should
not be supported in Splunk 8.0.0 or later. For more, see Deprecated features
and Changes for Splunk App developers. **
* [ skipped ] check_for_advanced_xml_module_elements - Check that there is no
Advanced XML, which was deprecated in Splunk Enterprise 6.3. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_cherry_py_custom_controller_web_conf_endpoints - Check
for the existence of custom CherryPy endpoints, which must be upgraded tobe
Python 3-compatible for the Splunk Enterprise 8.0. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_existence_of_python_code_block_in_mako_template - Check
for the existence of Python code block in Mako templates, which must be
upgraded to be Python 3-compatible for the Splunk Enterprise 8.0. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_python_script_existence - Check for the existence of
Python scripts, which must be upgraded to be cross-compatible with Python 2 and
3 for Splunk Enterprise 8.0. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_removed_m2crypto_usage - Check for the existence of the
M2Crypto package usage, which is removed in the Splunk Enterprise 8.0. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_splunk_web_legacy_mode - Check that Splunk Web is not
in Legacy Mode, which was deprecated in Splunk Enterprise 6.4. *
    * Skipping due to package validation issues.
** Deprecated features from Splunk Enterprise 9.0.1 The following features
should not be supported in Splunk 9.0.1 or later. For more, see Deprecated
features and Changes for Splunk App developers. **
* [ skipped ] check_for_search_v1_endpoint - Check search v1 deprecated API
usages *
    * Skipping due to package validation issues.
** Web.conf File Standards Ensure that web.conf is safe for cloud deployment
and that any exposed patterns match endpoints defined by the app - apps should
not expose endpoints other than their own. Including web.conf can have adverse
impacts for cloud. Allow only [endpoint:*] and [expose:*] stanzas, with expose
only containing pattern= and methods= properties. - web.conf **
* [ skipped ] check_web_conf_expose_patterns_have_restmap_matches - Check that
apps only expose web endpoints that are defined bythe Splunk App within
restmap.conf. Each web.conf[expose:] stanza should have the property pattern=
which defines a urlpattern to expose. Each url pattern exposed should
correspond to a stanzawithin restmap.conf with a url pattern defined with the
match=property, or for the case of [admin:] stanzas a combination of match=
andmembers= properties. *
    * Skipping due to package validation issues.
* [ skipped ] check_web_conf - Check that web.conf only defines [endpoint:] and
[expose:]stanzas, with [expose:*] only containing pattern= and methods=. *
    * Skipping due to package validation issues.
** Modular inputs structure and standards Modular inputs are configured in an
inputs.conf.spec file located in the /README directory of the app. For more,
see Modular inputs overview, Modular inputs configuration, and Modular inputs
basic example. **
* [ skipped ] check_inputs_conf - Check that a valid inputs.conf.spec file are
located in the README/ directory. *
    * Skipping due to package validation issues.
* [ skipped ] check_inputs_conf_spec_has_stanzas - Check that README/
inputs.conf.spec contains stanzas. *
    * Skipping due to package validation issues.
* [ skipped ] check_inputs_conf_spec_stanzas_has_python_version_property -
Check that all the modular inputs defined in inputs.conf.spec are explicitlyset
the python.version to python3 *
    * Skipping due to package validation issues.
* [ skipped ] check_inputs_conf_spec_has_no_duplicate_properties - Check that
modular input stanzas do not contain duplicate arguments. *
    * Skipping due to package validation issues.
* [ skipped ] check_inputs_conf_spec_has_no_duplicate_stanzas - Check that
modular inputs do not have duplicate stanzas. *
    * Skipping due to package validation issues.
* [ skipped ] check_inputs_conf_spec_stanza_args_broken_correctly - Check lines
breaks are included in configuration when using a modular input. *
    * Skipping due to package validation issues.
* [ skipped ] check_inputs_conf_spec_stanzas_have_properties - Check that
modular inputs specify arguments. *
    * Skipping due to package validation issues.
* [ skipped ] check_modular_inputs_scripts_exist - Check that there is a script
file in bin/ for each modular input defined in README/inputs.conf.spec. *
    * Skipping due to package validation issues.
** JSON file standards **
* [ skipped ] check_validate_json_data_is_well_formed - Check that all JSON
files are well formed. *
    * Skipping due to package validation issues.
** Lookup file standards Lookups add fields from an external source to events
based on the values of fields that are already present in those events. **
* [ skipped ] check_for_lookups_file_name - Check that no two files/directories
under the lookups directory have this naming pattern respectively:xxx and
xxx.default - with the only difference in the .default extension.During the
installation of an app in Splunk Cloud, a lookup file will be temporarily
renamed to append an additional.default extension to it, which will cause error
if a namesake file already exists. *
    * Skipping due to package validation issues.
* [ skipped ] check_lookup_csv_is_valid - Check that .csv files are not empty,
have at least two columns, have headers with no more than 4096 characters, do
not use Macintosh-style (\r) line endings, have the same number of columns in
every row, and contain only UTF-8 characters. *
    * Skipping due to package validation issues.
** Saved search standards Saved searches are defined in a savedsearches.conf
file located in the /default and /local directory of the app. For more, see
Save and share your reports and savedsearches.conf. **
* [ skipped ] check_for_emails_in_saved_search - Check that email alerts
(action.email.to) set in savedsearches.conf do not have a default value. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_empty_saved_search_description - Check that default/
savedsearches.conf has no descriptiopropertie that are empty. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_gratuitous_cron_scheduling - check that
savedsearches.conf searches are cron scheduledreasonably. Less than five
asterisks should be used. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_real_time_saved_searches - Check that no real-time pre-
index saved searches are being used in savedsearches.conf.Real-time pre-index
saved searches are extremely system intensive and should be avoided. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_real_time_saved_searches_for_cloud - Check that no
real-time pre-index saved searches are being used insavedsearches.conf. Real-
time pre-index saved searches are extremelysystem intensive and should be
avoided. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_sched_saved_searches_action_script_filename - Check
that savedsearch.conf stanzas do not contain action.script.filename option *
    * Skipping due to package validation issues.
* [ skipped ] check_for_sched_saved_searches_earliest_time - Check that if a
scheduled saved search in savedsearch.conf contains dispatch.earliest_time
option, or if a scheduled saved search with auto summary enabled contains
auto_summarize.dispatch.earliest_time option *
    * Skipping due to package validation issues.
* [ skipped ] check_for_sched_saved_searches_latest_time - Check that if a
savedsearch.conf stanza contains scheduling optionsit does contain a
dispatch.latest_time *
    * Skipping due to package validation issues.
* [ skipped ] check_for_saved_searches_populate_lookup - Check that
savedsearch.conf stanza do not contain action.populate_lookup option`. *
    * Skipping due to package validation issues.
* [ skipped ] check_saved_search_specifies_a_search - Check that saved searches
have a search string specified. *
    * Skipping due to package validation issues.
** App.conf standards The app.conf file located at default/app.conf provides
key application information and branding. For more, see app.conf. **
* [ skipped ] check_custom_conf_replication - Check that custom .conf files
have a a matching conf_replication_include.<conf_file_name> value in
server.conf, under the [shclustering] stanza, to ensure that configurations are
synchronized across Search Head Clusters. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_default_splunk_app - Check that id attribute under the
package stanza in app.confdoes not match with the Splunk Default App names *
    * Skipping due to package validation issues.
* [ skipped ] check_for_trigger_stanza - Check that default/app.conf, local/
app.conf and all users/<username>/local/app.conf don't have a
reload.<CONF_FILE>, where CONF_FILE is a non-custom conf. (https://
docs.splunk.com/Documentation/Splunk/latest/Admin/Appconf#.5Btriggers.5D) *
    * Skipping due to package validation issues.
* [ skipped ] check_for_updates_disabled - Check the [package] stanza in
app.conf specifies check_for_updates as False for Private apps. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_valid_package_id - Check that the [package] stanza in
app.conf has a valid id value.See https://docs.splunk.com/Documentation/Splunk/
latest/Admin/Appconf for details. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_valid_ui_label - Check that the default/app.conf or
local/app.conf or users/<username>/local/app.conf contains a label key value
pair in the [ui] stanza and the length is between 5 and 80 characters
inclusive. *
    * Skipping due to package validation issues.
* [ skipped ] check_reload_trigger_for_all_custom_confs - Check that custom
config files have a corresponding reload trigger in app.conf. Without a reload
trigger the app will request a restart on any change to the config file, which
may be a negative experience for end-users. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_invalid_app_names - Check that default/app.conf has
author = <some words are not about Splunk> must not has attributes label or
description with values of Splunk App for XXXX. *
    * Skipping due to package validation issues.
* [ skipped ] check_no_install_source_checksum - Check in default/app.conf,
'local/app.conf' and each users/<username>/local/app.conf, that
install_source_checksum not be set explicitly. *
    * Skipping due to package validation issues.
* [ skipped ] check_no_install_source_local_checksum - Check in default/
app.conf, 'local/app.conf' and each `users/<username/local/app.conf, that
install_source_local_checksum not be set explicitly. *
    * Skipping due to package validation issues.
* [ skipped ] check_that_setup_has_not_been_performed - Check that default/
app.conf setting is_configured = False. *
    * Skipping due to package validation issues.
** Application content structure standards Ensure that the application content
adheres to Splunk standards. **
* [ skipped ] check_app_icon_2x_dimensions - Check that static/appIcon_2x is
72x72px or less *
    * Skipping due to package validation issues.
* [ skipped ] check_app_icon_2x_is_png - Check that static/appIcon_2x is a png
file *
    * Skipping due to package validation issues.
* [ skipped ] check_app_icon_alt_2x_dimensions - Check that static/
appIconAlt_2x.png is 72x72px or less *
    * Skipping due to package validation issues.
* [ skipped ] check_app_icon_alt_2x_is_png - Check that static/appIconAlt_2x is
a png file *
    * Skipping due to package validation issues.
* [ skipped ] check_app_icon_alt_dimensions - Check that static/appIconAlt.png
is 36x36px or less *
    * Skipping due to package validation issues.
* [ skipped ] check_app_icon_alt_is_png - Check that static/appIconAlt is a png
file *
    * Skipping due to package validation issues.
* [ skipped ] check_app_icon_dimensions - Check that static/appIcon is 36x36px
or less *
    * Skipping due to package validation issues.
* [ skipped ] check_app_icon_is_png - Check that static/appIcon is a png file *
    * Skipping due to package validation issues.
* [ skipped ] check_app_logo_2x_dimensions - Check that static/appLogo_2x.png
is 320x80px or less *
    * Skipping due to package validation issues.
* [ skipped ] check_app_logo_2x_is_png - Check that static/appLogo_2x is a png
file *
    * Skipping due to package validation issues.
* [ skipped ] check_app_logo_dimensions - Check that static/appLogo.png is
160x40px or less *
    * Skipping due to package validation issues.
* [ skipped ] check_app_logo_is_png - Check that static/appLogo is a png file *
    * Skipping due to package validation issues.
** Directory structure standards Ensure that the directories and files in the
app adhere to hierarchy standards. **
* [ skipped ] check_that_local_does_not_exist - Check that the 'local'
directory does not exist. All configuration should be in the 'default'
directory. *
    * Skipping due to package validation issues.
* [ skipped ] check_filenames_for_spaces - Check that app has no .conf or
dashboard filenames that contain spaces. Splunk software does not support such
files. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_local_meta - Check that the file 'local.meta' does not
exist. All metadata permissions should be set in 'default.meta'. *
    * Skipping due to package validation issues.
* [ skipped ] check_that_app_name_config_is_valid - Check that the app name
does not start with digits *
    * Skipping due to package validation issues.
* [ skipped ] check_that_local_passwords_conf_does_not_exist - Check that
local/passwords.conf or `users//local/passwords.conf does not exist. Password
files are not transferable between instances. *
    * Skipping due to package validation issues.
** Configuration file standards Ensure that all configuration files located in
the /default folder are well formed and valid. **
* [ skipped ] check_collections_conf_for_specified_name_field_type - Check that
the field.<name> type in collections.conf does not include boolean.Use bool
instead. *
    * Skipping due to package validation issues.
* [ skipped ] check_config_file_parsing - Check that all config files parse
cleanly- no trailing whitespace after continuations, no duplicated stanzas or
options. *
    * Skipping due to package validation issues.
* [ skipped ] check_config_file_parsing_public - Check that all config files
parse cleanly- no trailing whitespace after continuations, no duplicated
stanzas or options. *
    * Skipping due to package validation issues.
* [ skipped ] check_manipulation_outside_of_app_container - Check that app conf
files do not point to files outside the app container. Because hard-coded paths
won't work in Splunk Cloud, we don't consider to check absolute paths. *
    * Skipping due to package validation issues.
* [ skipped ] check_no_default_stanzas - Check that app does not contain any
.conf files that create global definitions using the [default] stanza. *
    * Skipping due to package validation issues.
* [ skipped ] check_validate_no_duplicate_stanzas_in_conf_files - Check that no
duplicate stanzas exist in .conf files. *
    * Skipping due to package validation issues.
** Indexes.conf file standards Ensure that the index configuration file located
in the /default and /local folder is well formed and valid. For more, see
indexes.conf. **
* [ skipped ] check_coldToFrozenScript_has_valid_python_version_property -
Check that all the coldToFrozenScript in indexes.conf are explicitly set the
python.version to python3. *
    * Skipping due to package validation issues.
* [ skipped ] check_index_definition_has_required_options - Check that all
index definitions exist all required options including: homePath, coldPath, and
thawedPath. *
    * Skipping due to package validation issues.
* [ skipped ] check_indexes_conf_does_not_exist - Check that the app does not
create indexes. *
    * Skipping due to package validation issues.
* [ skipped ] check_indexes_conf_properties - Check that indexes.conf only
contains the required 'homePath' , 'coldPath', and 'thawedPath' properties or
the optional 'frozenTimePeriodInSecs', 'disabled', 'datatype' and 'repFactor'
properties. All other properties are prohibited. Also, if repFactor property
exists, it's value should be 'auto'. This check is cloud only because indexes
are not allowed via check_indexes_conf_does_not_exist. *
    * Skipping due to package validation issues.
* [ skipped ] check_lower_cased_index_names - Check that all index names
consist only of lowercase characters, numbers, underscores and hyphens. They
cannot begin with an underscore or hyphen, or contain the word 'kvstore'. If
index names have any uppercase characters any attempts to edit the index in the
UI will cause a duplicate index stanza creation which will cause many errors in
Splunk. *
    * Skipping due to package validation issues.
* [ skipped ] check_validate_default_indexes_not_modified - Check that no
default Splunk indexes are modified by the app. *
    * Skipping due to package validation issues.
** Meta file standards Ensure that all meta files located in the /metadata
folder are well formed and valid. **
* [ skipped ] check_kos_are_accessible - Check that knowledge objects with
access control restrictions defined in *.meta files are accessible to customers
in Splunk Cloud. *
    * Skipping due to package validation issues.
* [ skipped ] check_meta_file_parsing - Check that all .meta files parse with
no trailing whitespace after continuations with no duplicate stanzas or
options. *
    * Skipping due to package validation issues.
* [ skipped ] check_validate_no_duplicate_stanzas_in_meta_files - Check that
.meta files do not have duplicate stanzas. *
    * Skipping due to package validation issues.
** Props Configuration file standards Ensure that all props.conf files located
in the default (or local) folder are well formed and valid. props.conf
transforms.conf **
* [ skipped ] check_pretrained_sourcetypes_have_only_allowed_transforms - Check
that pretrained sourctypes in props.confhave only 'TRANSFORM-' or 'SEDCMD'
settings,and that those transforms only modify the host, source, or sourcetype.
*
    * Skipping due to package validation issues.
* [ skipped ] check_props_conf_extract_option_has_named_capturing_group - Check
that each EXTRACT- in props.conf has regex with at least one named capturing
group. *
    * Skipping due to package validation issues.
* [ skipped ] check_props_conf_has_no_ingest_eval_lookups - Check that the
props.conf does not contain lookup() usage in INGEST_EVAL options. This feature
is not available in Splunk Cloud. For example: [lookup1] INGEST_EVAL=
status_detail=lookup("http_status.csv", json_object("status", status),
json_array("status_description")) *
    * Skipping due to package validation issues.
* [ skipped ] check_props_conf_has_report_option_and_transforms_conf_exist -
Check that there is a 'transforms.conf' file when REPORT- options are defined
in props.conf. *
    * Skipping due to package validation issues.
* [ skipped ]
check_props_conf_has_report_option_and_transforms_conf_has_matching_stanza -
Check that each REPORT- in props.conf has an associated stanza in
transforms.conf file. *
    * Skipping due to package validation issues.
* [ skipped ]
check_props_conf_has_report_option_and_transforms_conf_has_required_option -
Check that REPORT- options in props.conf, have either DELIMS or REGEX options
in the matching transforms.conf stanza. If it has REGEX option, further check
whether is has at least one capturing group. *
    * Skipping due to package validation issues.
* [ skipped ] check_props_conf_has_transforms_option_and_transforms_conf_exist
- Check that there is a 'transforms.conf' file when TRANSFORM- options are
defined in props.conf. *
    * Skipping due to package validation issues.
* [ skipped ]
check_props_conf_has_transforms_option_and_transforms_conf_has_matching_stanza
- Check that TRANSFORM- options in props.conf have associated stanzas in
transforms.conf file. *
    * Skipping due to package validation issues.
* [ skipped ] check_props_conf_regex_stanza_name_followed_by_double_colon -
Check that the props.conf stanzas (delayedrule, host, rule, or source) are
followed by ::. For example: [host::nyc*] [rule::bar_some] *
    * Skipping due to package validation issues.
** Server configuration file standards Ensure that server.conf is well formed
and valid. For detailed information about the server configuration file, see
server.conf. **
* [ skipped ]
check_server_conf_only_contains_custom_conf_sync_stanzas_or_diag_stanza - Check
that server.conf in an app is only allowed to contain: 1.
conf_replication_include.\<custom_conf_files> in [shclustering] stanza 2. or
EXCLUDE-\<class> property in [diag] stanza, *
    * Skipping due to package validation issues.
** Transforms.conf file standards Ensure that the transforms.conf file located
in the /default folder is well formed and valid. For more, see transforms.conf.
**
* [ skipped ] check_all_lookups_are_used - Check that all files in the /lookups
directory are referenced in transforms.conf. *
    * Skipping due to package validation issues.
* [ skipped ] check_capture_groups_in_transforms - Check that all capture
groups are used in transforms.conf. Groups not used for capturing should use
the non-capture group syntax *
    * Skipping due to package validation issues.
** Alert actions structure and standards Custom alert actions are defined in an
alert_actions.conf file located in the /default directory of the app. For more,
see Custom alert actions overview and alert_actions.conf. **
* [ skipped ] check_alert_actions_conf_exists - Check that a valid
alert_actions.conf file exists at default/alert_actions.conf. *
    * Skipping due to package validation issues.
* [ skipped ] check_alert_actions_exe_exist - Check that each custom alert
action has a valid executable. If it does, further check if the executable is
Python script. If it does, further check it's Python 3 compatible. *
    * Skipping due to package validation issues.
* [ skipped ] check_alert_icon_exists_for_custom_alerts - Check that icon files
defined for alert actions in alert_actions.conf exist. Custom Alert Action
Component Reference *
    * Skipping due to package validation issues.
* [ skipped ] check_for_explict_exe_args - Check whether any custom alert
actions have executable arguments. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_payload_format - Check that each custom alert action's
payload format has a value of xml or json. *
    * Skipping due to package validation issues.
** Custom search command structure and standards Custom search commands are
defined in a commands.conf file in the /default directory of the app. For more,
see About writing custom search commands and commands.conf. **
* [ skipped ] check_command_conf_exists - Check that commands.conf exists at
default/commands.conf. *
    * Skipping due to package validation issues.
* [ skipped ] check_command_scripts_exist - Check that custom search commands
have an executable or script per stanza. *
    * Skipping due to package validation issues.
* [ skipped ] check_default_meta_exists - Check that a valid default.meta file
exists when using a custom search command. *
    * Skipping due to package validation issues.
* [ skipped ] check_command_scripts_python_version - Check that commands.conf
must explicitly define the python.version to be python3 for each python-
scripted custom command. *
    * Skipping due to package validation issues.
* [ skipped ] check_ignored_parameters_v1_command - Check that the custom
commands attributes maxwait and maxchunksize are only used when chunked = true.
Commands.conf reference *
    * Skipping due to package validation issues.
* [ skipped ] check_ignored_parameters_v2_command - Check for ignored arguments
in commands.conf when chunked=true. Commands.conf reference *
    * Skipping due to package validation issues.
* [ skipped ] check_passauth_and_enableheader - Check that custom search
commands using passauth have enableheader set to true. *
    * Skipping due to package validation issues.
* [ skipped ] check_requires_preop_and_streaming_preop - Check that custom
search commands using requires_preop have streaming_preop set to true. *
    * Skipping due to package validation issues.
* [ skipped ] check_requires_srinfo_and_enableheader - Check that custom search
commands using requires_srinfo have enableheader set to true. *
    * Skipping due to package validation issues.
** Custom workflow actions structure and standards Custom workflow actions are
defined in a workflow_actions.conf file in the /default directory of the app.
For more, see About lookups and workflow_actions.conf. **
* [ skipped ] check_workflow_actions_have_required_properties - Check that
stanzas in workflow_actions.conf.spec have the required fields, type, and
label. *
    * Skipping due to package validation issues.
* [ skipped ] check_workflow_actions_link_uri_does_not_use_http_protocol -
Check that for each workflow action in workflow_actions.conf the link.uri
property uses the https protocol for external links. Unencrypted http is
permitted for internal links. *
    * Skipping due to package validation issues.
** REST endpoints and handler standards REST endpoints are defined in a
restmap.conf file in the /default and /local directory of the app. For more,
see restmap.conf. **
* [ skipped ] check_restmap_conf_exists - Check that restmap.conf file exists
at default/restmap.conf, local/restmap.conf and users//local/restmap.conf` when
using REST endpoints. *
    * Skipping due to package validation issues.
* [ skipped ] check_rest_handler_python_executable_exists - Check that python
version is python3 for executables in restmap.conf. *
    * Skipping due to package validation issues.
* [ skipped ] check_rest_handler_scripts_exist - Check that each stanza in
restmap.conf has a matching handler script. if not, fail this app. *
    * Skipping due to package validation issues.
* [ skipped ] check_rest_handler_scripts_exist_for_cloud - Check that each
stanza in restmap.conf has a matching handler script.if not, throw a warning. *
    * Skipping due to package validation issues.
** Data model files and configurations Data models are defined in a
datamodels.conf file in the /default directory of the app. For more, see About
data models and datamodels.conf. **
* [ skipped ] check_validate_data_models_conf_file_in_correct_locations - Check
that when using data models, the datamodels.conf file only exists in the
default directory. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_datamodel_acceleration - Check that the use of
accelerated data models do not occur. If data model acceleration is required,
developers should provide directions in documentation for how to accelerate
data models from within the Splunk Web GUI. data model acceleration *
    * Skipping due to package validation issues.
* [ skipped ] check_validate_no_missing_json_data - Check that each stanza in
datamodels.conf has a matching JSON file in default/data/models/. *
    * Skipping due to package validation issues.
** Python file standards **
* [ skipped ] check_python_sdk_version - Check that Splunk SDK for Python is
up-to-date. *
    * Skipping due to package validation issues.
* [ skipped ] check_all_python_files_are_well_formed - Check all python files
are well formed under python2 and python3 standard *
    * Skipping due to package validation issues.
* [ skipped ] check_built_in_import_function - Check that the python __import__
method is not used in a way that can be exploited (e.g., import(conf_setting)
is at risk of code injection). *
    * Skipping due to package validation issues.
* [ skipped ] check_for_builtin_functions - Check for builtin functions(open,
eval, execfile, file) usages in python files *
    * Skipping due to package validation issues.
* [ skipped ] check_for_compiled_python - Check that there are no .pyc or .pyo
files included in the app. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_custom_python_interpreters - Check if custom python
interpreters could be used in malicious code execution *
    * Skipping due to package validation issues.
* [ skipped ] check_for_data_compression_and_archiving - check if data
compression and archiving libraries could be used to read & write files outside
of app dir *
    * Skipping due to package validation issues.
* [ skipped ] check_for_data_persistence - check for data persistence usage
which could be used to invoke marshall function call *
    * Skipping due to package validation issues.
* [ skipped ] check_for_debugging_and_profiling - Check if debugging library
could be used to execute arbitrary commands *
    * Skipping due to package validation issues.
* [ skipped ] check_for_file_and_directory_access - Check for possible file and
directory access, they could be used in external file manipulation *
    * Skipping due to package validation issues.
* [ skipped ] check_for_generic_operating_system_services - check if generic
operating system modules could be used to communicate with outside services,
files or systems *
    * Skipping due to package validation issues.
* [ skipped ] check_for_hidden_python_files - Check that there are no hidden
python files included in the app. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_importing_modules - Check Python code for importing
modules dynamically. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_internet_protocols_and_support - Check for the use of
web server classes, they could be used to start a internal server in current
app *
    * Skipping due to package validation issues.
* [ skipped ] check_for_interprocess_communication_and_networking - check if
networking or file manipulation exist in interprocess modules usage *
    * Skipping due to package validation issues.
* [ skipped ] check_for_ms_windows_specific_services - Check if MS Windows
specific service modules could be used to execute dangerous windows platform
commands *
    * Skipping due to package validation issues.
* [ skipped ] check_for_optional_operating_system_services - Check for
operating system features that are available on selected operating systems
only. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_plain_text_credentials_in_python - check for plain text
credentials disclosure in python files *
    * Skipping due to package validation issues.
* [ skipped ] check_for_possible_threading - Check for the use of threading,
and multiprocesses. Threading or process must be used with discretion and not
negatively affect the Splunk installation as a whole. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_program_frameworks - Check if program frameworks could
be used to interface with web part *
    * Skipping due to package validation issues.
* [ skipped ] check_for_python_multimedia_services - Check if multimedia
services module could be used to execute unknown-source multimedia files *
    * Skipping due to package validation issues.
* [ skipped ] check_for_python_runtime_services - Check if python runtime
services could be used to manipulate system python objects *
    * Skipping due to package validation issues.
* [ skipped ] check_for_python_udp_network_communications - Check for UDP
network communication *
    * Skipping due to package validation issues.
* [ skipped ] check_for_restricted_execution - Check if restricted execution
exist in current app *
    * Skipping due to package validation issues.
* [ skipped ] check_for_reverse_shell_and_backdoor - check if possible reverse
shell exist in python code *
    * Skipping due to package validation issues.
* [ skipped ] check_for_root_privilege_escalation - Check possible root
privilege escalation *
    * Skipping due to package validation issues.
* [ skipped ] check_for_unencrypted_network_communications - Check that all
network communications are encrypted *
    * Skipping due to package validation issues.
* [ skipped ] check_python_httplib2_version - Check python httplib2 version. *
    * Skipping due to package validation issues.
* [ skipped ] check_python_untrusted_xml_functions - Check for untrusted xml
usages in python libraries *
    * Skipping due to package validation issues.
** addon_builder.conf standards The addon_builder.conf file located at default/
addon_builder.conf provides the information about the add on builder associated
with the Splunk App **
* [ skipped ] check_for_addon_builder_version - Check that the
addon_builder.conf contains an builder version number between 4.1.3 and 4.1.4
in the [base] stanza. Ensure that apps built with Add-on Builder are maintained
with an up-to-date version of Add-on Builder. *
    * Skipping due to package validation issues.
** Bias language (static checks) **
* [ skipped ] check_for_bias_language - Check that the app does not include any
bias words. *
    * Skipping due to package validation issues.
** Malware, viruses, malicious content, user security standards (static checks)
**
* [ skipped ] check_authorization_credentials - Check that no plain text
authorization credentials are stored in the app. *
    * Skipping due to package validation issues.
* [ skipped ] check_embedded_links - Check that embedded links included in the
app are not malicious. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_offensive_material - Check that the app does not
include any offensive material. *
    * Skipping due to package validation issues.
* [ skipped ] check_hostnames_and_ips - Check that no sensitive hostnames/IPs
are stored in the app. *
    * Skipping due to package validation issues.
** Operating system standards **
* [ skipped ] check_destructive_commands - Check for the use of malicious shell
commands in configuration files or shell scripts to corrupt the OS or Splunk
instance. Other scripting languages are covered by other checks. *
    * Skipping due to package validation issues.
* [ skipped ] check_fs_writes - Check that applications only write to the
following directories <SPLUNK_HOME>/etc/<APP_NAME>/local, <SPLUNK_HOME>/etc/
<APP_NAME>/lookup <SPLUNK_HOME>/var/log/<APP_NAME>/<LOG_NAME>.log,
<SPLUNK_HOME>/var/log/<APP_NAME>.log <SPLUNK_HOME>/var/run and OS temporary
directories. *
    * Skipping due to package validation issues.
* [ skipped ] check_hard_coded_paths - Check for hard-coded filepaths in
scripts relative to author's local developer environment, or absolute paths. *
    * Skipping due to package validation issues.
* [ skipped ] check_user_privileges - Check that scripts are not trying to
switch into other user accounts, create new users, run sudo. *
    * Skipping due to package validation issues.
** Security vulnerabilities **
* [ skipped ] check_for_command_injection_through_env_vars - Check for command
injection through environment variables. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_environment_variable_use_in_python - Check for
environment variable manipulation and attempts to monitor sensitive environment
variables. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_insecure_http_calls_in_python - Check for insecure HTTP
calls in Python. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_insecure_http_calls_in_python_private - Check for
insecure HTTP calls in Python. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_pexpect - Check for use of pexpect to ensure it is only
controlling app processes. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_secret_disclosure - Check for passwords and secrets. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_sensitive_info_in_url - Check for sensitive information
being exposed in transit via URL query string parameters *
    * Skipping due to package validation issues.
* [ skipped ] check_for_stacktrace_returned_to_user - Check that stack traces
are not being returned to an end user. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_supported_tls - Check that all outgoing connections use
TLS in accordance to Splunk Cloud Platform policy. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_supported_tls_private - Check that all outgoing
connections use TLS in accordance to Splunk Cloud Platform policy. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_vbs_command_injection - Check for command injection in
VBS files. *
    * Skipping due to package validation issues.
* [ skipped ] check_symlink_outside_app - Check no symlink points to the file
outside this app *
    * Skipping due to package validation issues.
** Source code and binaries standards **
* [ skipped ] check_for_bin_files - Check that files outside of the bin/ and
appserver/controllers directory do not have execute permissions. Splunk Cloud
is a Linux-based platform, Splunk recommends 644 for all app files outside of
the bin/ directory, 644 for scripts within the bin/ directory that are invoked
using an interpreter (e.g. python my_script.py or sh my_script.sh), and 755 for
scripts within the bin/ directory that are invoked directly (e.g. ./
my_script.sh or ./my_script). *
    * Skipping due to package validation issues.
* [ skipped ] check_for_executable_flag - Check that files outside of the bin/
directory do not appear to be executable according to the Unix file command.
From man file: files have a ``magic number'' stored in a particular place near
the beginning of the file that tells the UNIX operating system that the file is
a binary executable. *
    * Skipping due to package validation issues.
* [ skipped ] check_for_expansive_permissions - Check that no files have *nix
write permissions for all users (xx2, xx6, xx7). Splunk recommends 644 for all
app files outside of the bin/ directory, 644 for scripts within the bin/
directory that are invoked using an interpreter (e.g. python my_script.py or sh
my_script.sh), and 755 for scripts within the bin/ directory that are invoked
directly (e.g. ./my_script.sh or ./my_script). Since appinspect 1.6.1, check
that no files have nt write permissions for all users. *
    * Skipping due to package validation issues.
* [ skipped ] check_platform_specific_binaries - Check that documentation
declares platform-specific binaries. *
    * Skipping due to package validation issues.
** Documentation standards **
* [ skipped ] check_basic_readme - Check that the app has a <APP_DIR>/README
file that includes version support, system requirements, installation,
configuration, troubleshooting and running of the app, or a link to online
documentation. *
    * Skipping due to package validation issues.
* [ skipped ] check_custom_commands - Check that use of custom commands is
explained in the app's documentation. *
    * Skipping due to package validation issues.
* [ skipped ] check_search_acceleration - Check that use of report
acceleration, search acceleration, or summary indexing is explained in the
app's documentation. *
    * Skipping due to package validation issues.
* [ skipped ] check_dependencies - Check that prerequisites of the app are
explained in the app's documentation. All prerequisites must be either packaged
with your app, or be available on Splunkbase. *
    * Skipping due to package validation issues.
* [ skipped ] check_documented_included_open_source - Check that all open
source components used in developing the app are listed in the app's README
files with the version number and a link to the project's website. *
    * Skipping due to package validation issues.
* [ skipped ] check_documentation_language - Check that documentation is in
English. *
    * Skipping due to package validation issues.
* [ skipped ] check_editing_and_proofreading - Check that documentation is free
of major editing and proofreading (spelling, grammar, punctuation) issues. *
    * Skipping due to package validation issues.
* [ skipped ] check_archived_files - Check that any compressed archives within
the main release that need extracting are explained in the app's documentation.
*
    * Skipping due to package validation issues.
* [ skipped ] check_outputs_documented - Check that forwarding enabled in
'outputs.conf' is explained in the app's documentation. *
    * Skipping due to package validation issues.
** Appropriate use of sensitive functionality **
* [ skipped ] check_implements_data_models - Check that the use of datamodels
is explained in the app's documentation. *
    * Skipping due to package validation issues.
* [ skipped ] check_implements_inputcsv - Check that the use of inputcsv is
explained in the app's documentation. *
    * Skipping due to package validation issues.
* [ skipped ] check_implements_outputcsv - Check that the use of outputcsv is
explained in the app's documentation. *
    * Skipping due to package validation issues.
* [ skipped ] check_implements_tscollect - Check that use of 'tscollect' is
explained in the app's documentation. *
    * Skipping due to package validation issues.
* [ skipped ] check_initiates_outbound_communications - Check that any outbound
network communications in outputs.conf are explained in the app's
documentation. *
    * Skipping due to package validation issues.
* [ skipped ] check_requires_access_to_files_outside_apps_dir - Check that file
access outside of the app's home directory, $SPLUNK_HOME/var/log, $SPLUNK_HOME/
var/run, and system temporary directories is explained in the app's
documentation. *
    * Skipping due to package validation issues.
* [ skipped ] check_uses_eventgen - Check that use of 'eventgen.conf' is
explained in the app's documentation. *
    * Skipping due to package validation issues.
** Support requirements **
* [ skipped ] check_link_includes_contact_info - Check that the app's
documentation lists contact information and level of support for the app. Any
level of support is acceptable for developer supported apps, as long as it is
clearly declared in documentation. Community supported apps must be open source
with a public repository. For example: * Email support during weekday business
hours (US, West Coast). * Phone support 24x7 @ +1 (555) 123-4567. * This is an
open source project, no support provided, public repository available. *
    * Skipping due to package validation issues.
** XML file standards **
* [ skipped ] check_for_xml_embedded_javascript - Check any XML files that
embed JavaScript via CDATA for compliance with Splunk Cloud security policy. *
    * Skipping due to package validation issues.
* [ skipped ] check_that_all_xml_files_are_well_formed - Check that all XML
files are well-formed. *
    * Skipping due to package validation issues.
* [ skipped ] check_validate_no_event_handler - Ensure that global event
handlers are not used within XML files. *
    * Skipping due to package validation issues.
